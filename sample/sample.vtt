WEBVTT

00:00.000 --> 00:03.300
Hey everyone, welcome back, welcome to another exciting video

00:03.300 --> 00:09.300
and in this video, we are going to make our own video subtitle generator app using AI

00:09.300 --> 00:12.300
so basically what we are going to achieve in this video is

00:12.300 --> 00:18.300
if we have a video, let's say like you watch my videos and those videos are in Hindi language

00:18.300 --> 00:22.700
so what I want is that I have an AI tool to process my videos

00:22.700 --> 00:27.900
and generate subtitles in English language

00:27.900 --> 00:33.400
so that non-Hindi speakers can also watch my videos by reading subtitles

00:33.400 --> 00:37.400
so just to set the context first, if you have watched my live stream video yesterday

00:37.400 --> 00:41.900
then I have given you this challenge that if you can make this, it will be really cool

00:41.900 --> 00:46.900
so like this is a real problem that all the content creators face and I personally face

00:46.900 --> 00:52.400
and all the online tools like capwing, wheat are very expensive

00:52.400 --> 00:58.400
so I thought let's make our own and make a video or a tutorial that how I made this

00:58.400 --> 00:59.900
so let's start with the video

00:59.900 --> 01:03.900
before starting the video, let's take an overview of what we are going to do

01:03.900 --> 01:06.400
how we are going to approach this

01:06.400 --> 01:09.400
so basically what we are going to do is we are going to use docker

01:09.400 --> 01:11.400
so we have a docker container

01:11.400 --> 01:18.400
what we are going to do is we are going to use Ubuntu image in this

01:18.400 --> 01:20.900
we are going to install some tools in this

01:20.900 --> 01:26.900
so what we are going to do is we are going to install some video file in docker container

01:26.900 --> 01:29.900
and in return what we are going to do is we are going to make a text file

01:29.900 --> 01:32.900
a text file and an SRT file

01:32.900 --> 01:36.900
in which our transcriptions and I can say our subtitles will be there

01:36.900 --> 01:40.900
and it can be that whatever we are going to do in the video is in any language

01:40.900 --> 01:42.900
like Hindi, Punjabi or any language

01:42.900 --> 01:48.900
and in return what we are going to do is we are going to generate subtitles in English language

01:48.900 --> 01:50.900
so this is our approach

01:50.900 --> 01:54.900
and for this what we are going to do is we are going to use whisper AI

01:54.900 --> 01:57.900
so if you don't know what is whisper AI

01:57.900 --> 02:00.900
whisper AI is basically a large language model

02:00.900 --> 02:03.900
that works on videos or on audios

02:03.900 --> 02:05.900
and this is completely open source

02:05.900 --> 02:07.900
and free of cost

02:07.900 --> 02:10.900
so if you want to read its architecture

02:10.900 --> 02:11.900
then you can read it here

02:11.900 --> 02:13.900
so in this you can see that if the user says this

02:13.900 --> 02:15.900
then you can generate English transcriptions

02:15.900 --> 02:18.900
you can generate any to English transcriptions

02:18.900 --> 02:21.900
for example the user is talking in any language

02:21.900 --> 02:24.900
and the transcriptions that are being made are in English language

02:24.900 --> 02:26.900
and this is exactly what we want

02:26.900 --> 02:29.900
so let's start from the coding part

02:29.900 --> 02:31.900
I didn't want to waste much time here

02:31.900 --> 02:34.900
so we are going to use this and this is free of cost

02:34.900 --> 02:36.900
so for this video tutorial

02:36.900 --> 02:38.900
I have recorded a sample video here

02:38.900 --> 02:40.900
this is in Hindi language

02:40.900 --> 02:42.900
so let me show you the video

02:42.900 --> 02:44.900
so let me play it

02:46.900 --> 02:48.900
welcome

02:48.900 --> 02:50.900
so this is a sample video

02:50.900 --> 02:52.900
which is going to be in Hindi

02:52.900 --> 02:54.900
and we will try to generate subtitles

02:54.900 --> 02:56.900
of this Hindi video

02:56.900 --> 02:58.900
in English language

02:58.900 --> 03:00.900
so that our non-Hindi speaking audience

03:00.900 --> 03:02.900
can enjoy this video

03:02.900 --> 03:04.900
so let's see

03:04.900 --> 03:06.900
how our English subtitles

03:06.900 --> 03:08.900
come out

03:09.900 --> 03:11.900
so this is our video

03:11.900 --> 03:13.900
which we are going to translate

03:13.900 --> 03:15.900
so let's do one thing

03:15.900 --> 03:17.900
let's open our terminal

03:17.900 --> 03:19.900
this is our terminal

03:19.900 --> 03:21.900
and we will make a new project

03:21.900 --> 03:23.900
in the coding folder

03:23.900 --> 03:25.900
so we will call it video translator

03:25.900 --> 03:27.900
so this is our server video translator

03:27.900 --> 03:29.900
and in this I will do cd

03:29.900 --> 03:31.900
video translator

03:31.900 --> 03:33.900
and code dot

03:33.900 --> 03:35.900
which will open my vscode

03:35.900 --> 03:37.900
so as per our architecture

03:37.900 --> 03:39.900
we need to make a docker container

03:39.900 --> 03:41.900
so let's do one thing

03:41.900 --> 03:43.900
let's make a docker file

03:43.900 --> 03:45.900
and just in case you don't know docker

03:45.900 --> 03:47.900
you never worked with docker

03:47.900 --> 03:49.900
so what you can do is you can just head over

03:49.900 --> 03:51.900
to learn.pushkar.dev

03:51.900 --> 03:53.900
and you can just get at my course of docker

03:53.900 --> 03:55.900
I will put the link in the description

03:55.900 --> 03:57.900
so here is the course

03:57.900 --> 03:59.900
so in this we have covered

03:59.900 --> 04:01.900
the docker from absolute beginner

04:01.900 --> 04:03.900
to advanced level

04:03.900 --> 04:05.900
but please consider this course

04:05.900 --> 04:07.900
so you can see this course

04:07.900 --> 04:09.900
back to the topic

04:09.900 --> 04:11.900
so what we are going to do

04:11.900 --> 04:13.900
I will assume that you already know docker

04:13.900 --> 04:15.900
so what we are going to do is

04:15.900 --> 04:17.900
we will take a base image here first

04:17.900 --> 04:19.900
as I told you

04:19.900 --> 04:21.900
we will take a base image here

04:21.900 --> 04:23.900
what it means is that we will do it inside

04:23.900 --> 04:25.900
now we have to use this whisper ai

04:25.900 --> 04:27.900
it is very simple

04:27.900 --> 04:29.900
what we have to do is

04:29.900 --> 04:31.900
first we have to install the whisper ai

04:31.900 --> 04:33.900
so that is we have to install pip

04:33.900 --> 04:35.900
which is ok

04:35.900 --> 04:37.900
after that what we have to do is

04:37.900 --> 04:39.900
we have to install some tools here

04:39.900 --> 04:41.900
just like ffmpeg

04:41.900 --> 04:43.900
so internally we have to use ffmpeg

04:43.900 --> 04:45.900
and we have to install ffmpeg

04:45.900 --> 04:47.900
inside our docker container

04:47.900 --> 04:49.900
and we have to install this too

04:49.900 --> 04:51.900
after that that's it

04:51.900 --> 04:53.900
we are ready to go

04:53.900 --> 04:55.900
after that you can see what we have to do

04:55.900 --> 04:57.900
we have to say whisper

04:57.900 --> 04:59.900
whatever audio video file we have to give

04:59.900 --> 05:01.900
it will be in hindi language

05:01.900 --> 05:03.900
and we will say

05:03.900 --> 05:05.900
task translate

05:05.900 --> 05:07.900
so what it will do is translate it in english

05:07.900 --> 05:09.900
if we don't give this task

05:09.900 --> 05:11.900
then what it will do is

05:11.900 --> 05:13.900
the language in which we have this video

05:13.900 --> 05:15.900
will generate the same subtitles

05:15.900 --> 05:17.900
what we can do is we can make two translations

05:17.900 --> 05:19.900
we can make hindi subtitles

05:19.900 --> 05:21.900
and we can make english subtitles

05:21.900 --> 05:23.900
so this is going to be really cool

05:23.900 --> 05:25.900
so let's start it quickly

05:25.900 --> 05:27.900
so what we have to do is

05:27.900 --> 05:29.900
finally we want to do a command run

05:29.900 --> 05:31.900
that is apt update

05:31.900 --> 05:33.900
so our packages will be updated

05:33.900 --> 05:35.900
and after that what we are going to do is

05:35.900 --> 05:37.900
we are going to do apt install ffmpeg

05:37.900 --> 05:39.900
so what we have to do inside this docker container

05:39.900 --> 05:41.900
we have to install ffmpeg

05:41.900 --> 05:43.900
plus we have to install python

05:43.900 --> 05:45.900
so here you can quickly search

05:45.900 --> 05:47.900
like python install

05:47.900 --> 05:49.900
in ubuntu

05:49.900 --> 05:51.900
so how we can install python

05:51.900 --> 05:53.900
in ubuntu

05:53.900 --> 05:55.900
so let's see in documentation

05:55.900 --> 05:57.900
after apt update

05:57.900 --> 05:59.900
we just have to run this command

05:59.900 --> 06:01.900
and python will be installed

06:01.900 --> 06:03.900
we can say and and python 3

06:03.900 --> 06:05.900
and similarly we will install

06:05.900 --> 06:07.900
pip install in ubuntu

06:07.900 --> 06:09.900
so we can see

06:09.900 --> 06:11.900
how we can install pip

06:11.900 --> 06:13.900
so we just have to write apt install this thing

06:13.900 --> 06:15.900
so here I can say and and this

06:15.900 --> 06:17.900
and make sure

06:17.900 --> 06:19.900
that we have a command of hyphen y

06:19.900 --> 06:21.900
or else it will ask us

06:21.900 --> 06:23.900
if we have to install it or not

06:23.900 --> 06:25.900
so as soon as we

06:25.900 --> 06:27.900
run this thing our packages are installed

06:27.900 --> 06:29.900
now what we have to do is

06:29.900 --> 06:31.900
we have to install visper ai

06:31.900 --> 06:33.900
inside our machine

06:33.900 --> 06:35.900
so I will do this command copy

06:35.900 --> 06:37.900
and we will do run and this

06:37.900 --> 06:39.900
so what will it do? it will install

06:39.900 --> 06:41.900
my open ai visper

06:41.900 --> 06:43.900
inside my docker container

06:43.900 --> 06:45.900
and after that we will run

06:45.900 --> 06:47.900
so we will say run and this

06:47.900 --> 06:49.900
that's it our visper ai setup is done

06:49.900 --> 06:51.900
now we will say entry point

06:51.900 --> 06:53.900
and here we will say bash

06:53.900 --> 06:55.900
if you run this container

06:55.900 --> 06:57.900
then it will run from bash

06:57.900 --> 06:59.900
ideally we should run visper

06:59.900 --> 07:01.900
but I want to show you

07:01.900 --> 07:03.900
how things work so here we can

07:03.900 --> 07:05.900
keep it bash

07:05.900 --> 07:07.900
now make sure that your docker demon is running

07:07.900 --> 07:09.900
so till this point my docker demon

07:09.900 --> 07:11.900
was still closed so I just run

07:11.900 --> 07:13.900
docker demon

07:13.900 --> 07:15.900
so you can see that my docker is running

07:15.900 --> 07:17.900
so docker is now running

07:17.900 --> 07:19.900
so now we just have to write a command

07:19.900 --> 07:21.900
then I will say build

07:21.900 --> 07:23.900
tag

07:23.900 --> 07:25.900
and we will say my visper

07:25.900 --> 07:27.900
okay we can name it

07:27.900 --> 07:29.900
and dot

07:29.900 --> 07:31.900
dot means the path where this docker file is

07:31.900 --> 07:33.900
and enter

07:33.900 --> 07:35.900
now this thing will take some time because

07:35.900 --> 07:37.900
it will first fetch ubuntu and then

07:37.900 --> 07:39.900
install all these things and then our

07:39.900 --> 07:41.900
container will be built

07:41.900 --> 07:43.900
which we can use for our translations

07:43.900 --> 07:45.900
so this thing is going to take a lot of time

07:45.900 --> 07:47.900
because ubuntu

07:47.900 --> 07:49.900
you can see that ubuntu is getting

07:49.900 --> 07:51.900
pulled if you already have ubuntu

07:51.900 --> 07:53.900
right if you already have ubuntu

07:53.900 --> 07:55.900
pulled then it will not take that much time

07:55.900 --> 07:57.900
but because this is my first time

07:57.900 --> 07:59.900
pulling this so it is taking time

07:59.900 --> 08:01.900
so it's okay we can wait

08:01.900 --> 08:03.900
so we wait on this

08:03.900 --> 08:05.900
cool so now you can see that our docker

08:05.900 --> 08:07.900
is set up if I come back

08:07.900 --> 08:09.900
then you will see that we have an image

08:09.900 --> 08:11.900
that is my visper

08:11.900 --> 08:13.900
so this is our custom image that we just made

08:13.900 --> 08:15.900
now we can use it

08:15.900 --> 08:17.900
here my desktop

08:17.900 --> 08:19.900
if I go to my terminal

08:19.900 --> 08:21.900
and I do a series

08:21.900 --> 08:23.900
dot dot

08:23.900 --> 08:25.900
so here if I go to my desktop

08:25.900 --> 08:27.900
okay so what I will do here quickly

08:27.900 --> 08:29.900
I will make a folder on the desktop

08:29.900 --> 08:31.900
which I will name it sample

08:31.900 --> 08:33.900
samples

08:33.900 --> 08:35.900
so I know that you cannot see

08:35.900 --> 08:37.900
this particular thing

08:37.900 --> 08:39.900
so here if I do ls then you will see that

08:39.900 --> 08:41.900
here we have a folder sample

08:41.900 --> 08:43.900
so if I do cd in sample

08:43.900 --> 08:45.900
so here this is our file

08:45.900 --> 08:47.900
which we have to translate

08:47.900 --> 08:49.900
right so in this file

08:49.900 --> 08:51.900
let's rename this file

08:51.900 --> 08:53.900
we will call it sample.mov

08:53.900 --> 08:55.900
so if I do ls again

08:55.900 --> 08:57.900
you can see that this is our MOV file

08:57.900 --> 08:59.900
which I showed you just now

08:59.900 --> 09:01.900
so now what we can do is we just have to run our container

09:01.900 --> 09:03.900
so what I will do is

09:03.900 --> 09:05.900
first we copy this file path

09:05.900 --> 09:07.900
so this is the file

09:07.900 --> 09:09.900
so here we right click get info

09:09.900 --> 09:11.900
so first we copy this file

09:11.900 --> 09:13.900
so I have done this copy

09:13.900 --> 09:15.900
so here we will do docker run

09:15.900 --> 09:17.900
interactive

09:17.900 --> 09:19.900
volume mapping

09:19.900 --> 09:21.900
okay I hope that you can see the command

09:21.900 --> 09:23.900
I will zoom in also

09:23.900 --> 09:25.900
okay volume mapping

09:25.900 --> 09:27.900
so you map this volume

09:27.900 --> 09:29.900
slash home slash videos

09:29.900 --> 09:31.900
and after that we have to run which container

09:31.900 --> 09:33.900
that is mywhisper

09:33.900 --> 09:35.900
so my-whisper

09:35.900 --> 09:37.900
so this was our container

09:37.900 --> 09:39.900
so we will run it and enter

09:39.900 --> 09:41.900
this is our container up and running

09:41.900 --> 09:43.900
if you do ls and I go to

09:43.900 --> 09:45.900
cd-home

09:45.900 --> 09:47.900
and in cd-home I go to

09:47.900 --> 09:49.900
and I can go to like

09:49.900 --> 09:51.900
you can see that here we can go

09:51.900 --> 09:53.900
in videos if I do ls

09:53.900 --> 09:55.900
then you can see that in our container

09:55.900 --> 09:57.900
I am able to access that file

09:57.900 --> 09:59.900
so what we have to do is we just have to write

09:59.900 --> 10:01.900
whisper here

10:01.900 --> 10:03.900
our file name sample.mov

10:03.900 --> 10:05.900
and after that we will mention that

10:05.900 --> 10:07.900
which is our language

10:07.900 --> 10:09.900
so these are the examples and in which you can see

10:09.900 --> 10:11.900
Hindi is also included okay these are the languages

10:11.900 --> 10:13.900
so here I can say hyphen hyphen language

10:13.900 --> 10:15.900
okay hyphen hyphen language

10:15.900 --> 10:17.900
that is Hindi with a capital H

10:17.900 --> 10:19.900
then we will call it task

10:19.900 --> 10:21.900
so everything is translated from documentation

10:21.900 --> 10:23.900
so as soon as I do this

10:23.900 --> 10:25.900
and I will press enter

10:25.900 --> 10:27.900
now this thing is going to take a lot of time

10:27.900 --> 10:29.900
the reason being is because we

10:29.900 --> 10:31.900
basically what happens is because this is an AI

10:31.900 --> 10:33.900
so AI models need GPU

10:33.900 --> 10:35.900
and my machine is not having

10:35.900 --> 10:37.900
GPU okay so it works

10:37.900 --> 10:39.900
very slow on CPU

10:39.900 --> 10:41.900
but in reality obviously you will deploy this thing

10:41.900 --> 10:43.900
on a cloud okay so we will deploy it on a cloud

10:43.900 --> 10:45.900
so we should have

10:45.900 --> 10:47.900
GPU instances there but okay for this

10:47.900 --> 10:49.900
demonstration you can try this way

10:49.900 --> 10:51.900
if you have GPU then this thing is going to be very fast

10:51.900 --> 10:53.900
but if your machine doesn't have GPU

10:53.900 --> 10:55.900
then this thing is going to be slow

10:55.900 --> 10:57.900
so now you can see that

10:57.900 --> 10:59.900
how our subtitles are

10:59.900 --> 11:01.900
and it really took just one minute

11:01.900 --> 11:03.900
okay so here you can see

11:03.900 --> 11:05.900
yes welcome so this is a sample video

11:05.900 --> 11:07.900
which is going to be in

11:07.900 --> 11:09.900
in shudh hindi and we will try that

11:09.900 --> 11:11.900
so if you will look carefully

11:11.900 --> 11:13.900
what he did, he gave me this MOV

11:13.900 --> 11:15.900
file which I will tell you again

11:15.900 --> 11:17.900
so it was in Hindi right if I play it again

11:17.900 --> 11:19.900
yes welcome

11:19.900 --> 11:21.900
so this is a sample video

11:21.900 --> 11:23.900
which is going to be in shudh hindi

11:23.900 --> 11:25.900
and we will try that

11:25.900 --> 11:27.900
we can generate subtitles of this shudh hindi video

11:27.900 --> 11:29.900
in English language

11:29.900 --> 11:31.900
so that our non-hindi

11:31.900 --> 11:33.900
speaking audience can enjoy this video

11:33.900 --> 11:35.900
so let's see

11:35.900 --> 11:37.900
how our English subtitles

11:37.900 --> 11:39.900
come out

11:39.900 --> 11:41.900
right so you can see that

11:41.900 --> 11:43.900
he did a very good job

11:43.900 --> 11:45.900
and what he did in return

11:45.900 --> 11:47.900
he did some sample videos right you can see that

11:47.900 --> 11:49.900
if I open this json okay open with

11:49.900 --> 11:51.900
vs code so you can see that if I

11:51.900 --> 11:53.900
format this document so you can see that

11:53.900 --> 11:55.900
what he did he said that

11:55.900 --> 11:57.900
from 0 to 2 you said yes welcome

11:57.900 --> 11:59.900
so this is a timestamp okay

11:59.900 --> 12:01.900
so this is a sample video and it started

12:01.900 --> 12:03.900
at this time and ended at this time

12:03.900 --> 12:05.900
so if you can do it through any video

12:05.900 --> 12:07.900
processing you can put subtitles on it

12:07.900 --> 12:09.900
okay here one more thing that I want

12:09.900 --> 12:11.900
to do is if I can just attach

12:11.900 --> 12:13.900
the subtitles here itself

12:13.900 --> 12:15.900
because if you have seen carefully

12:15.900 --> 12:17.900
we also have srt file

12:17.900 --> 12:19.900
we also have vtt file

12:19.900 --> 12:21.900
so what are these vtt files

12:21.900 --> 12:23.900
these are basically our translation files

12:23.900 --> 12:25.900
so you can see that as it is

12:25.900 --> 12:27.900
you can upload it on youtube

12:27.900 --> 12:29.900
automatically it will make subtitles

12:29.900 --> 12:31.900
so here if I go to my quicktime player

12:31.900 --> 12:33.900
I am not sure if we can

12:33.900 --> 12:35.900
do this for subtitles

12:35.900 --> 12:37.900
so here like option should be

12:37.900 --> 12:39.900
subtitles are like none okay

12:39.900 --> 12:41.900
so let's do one thing let's go to chrome

12:41.900 --> 12:43.900
okay so here I will say that

12:43.900 --> 12:45.900
let's say we open any service

12:45.900 --> 12:47.900
let's say maybe weed okay so let's open

12:47.900 --> 12:49.900
weed.io so here

12:49.900 --> 12:51.900
I upload the video first okay

12:51.900 --> 12:53.900
by the way weed.io is a

12:53.900 --> 12:55.900
like AI tool so here we will upload

12:55.900 --> 12:57.900
so in the desktop

12:57.900 --> 12:59.900
in the sample we will open it

12:59.900 --> 13:01.900
okay so let's open this thing

13:01.900 --> 13:03.900
let's open it here

13:03.900 --> 13:05.900
here I will go to subtitles

13:05.900 --> 13:07.900
so here I will say manual okay here

13:07.900 --> 13:09.900
we can upload our own file so upload

13:09.900 --> 13:11.900
okay and here I will say that

13:11.900 --> 13:13.900
to upload

13:13.900 --> 13:15.900
Hindi is okay import

13:15.900 --> 13:17.900
so to import what we have to give

13:17.900 --> 13:19.900
we have to give srt file

13:19.900 --> 13:21.900
what it was like

13:21.900 --> 13:23.900
let's go back so it says

13:23.900 --> 13:25.900
that yeah so we can upload srt file

13:25.900 --> 13:27.900
so let's upload this file

13:27.900 --> 13:29.900
okay I didn't do anything I

13:29.900 --> 13:31.900
uploaded the file that our AI generated

13:31.900 --> 13:33.900
now let's play it

13:33.900 --> 13:35.900
welcome

13:35.900 --> 13:37.900
so this is a sample video which will be

13:37.900 --> 13:39.900
in pure Hindi and we will try

13:39.900 --> 13:41.900
that we can generate subtitles

13:41.900 --> 13:43.900
of this pure Hindi video

13:43.900 --> 13:45.900
in English language

13:45.900 --> 13:47.900
so that our non-hindi speaking audience

13:47.900 --> 13:49.900
can enjoy this video

13:49.900 --> 13:51.900
so let's see that this video

13:51.900 --> 13:53.900
how our English subtitles

13:53.900 --> 13:55.900
come out

13:55.900 --> 13:57.900
so as you have already seen

13:57.900 --> 13:59.900
that we were able to

13:59.900 --> 14:01.900
generate subtitles

14:01.900 --> 14:03.900
that is also free of cost

14:03.900 --> 14:05.900
so we used whisper here

14:05.900 --> 14:07.900
and for this video

14:07.900 --> 14:09.900
it is a very short video in which

14:09.900 --> 14:11.900
I wanted to show you how you can achieve this

14:11.900 --> 14:13.900
particular thing and now what I am planning

14:13.900 --> 14:15.900
is that I will make a web application

14:15.900 --> 14:17.900
in which we will do this on cloud

14:17.900 --> 14:19.900
so what you can do is like you can connect

14:19.900 --> 14:21.900
because obviously these things are coming

14:21.900 --> 14:23.900
like this will charge you money because

14:23.900 --> 14:25.900
one CPU is running on the cloud

14:25.900 --> 14:27.900
so like you can upload a video

14:27.900 --> 14:29.900
you can pay the money and then

14:29.900 --> 14:31.900
the subtitles will come out in different languages

14:31.900 --> 14:33.900
so this thing was that simple to do

14:33.900 --> 14:35.900
and I hope you enjoyed the video

14:35.900 --> 14:37.900
if you liked the video then like and subscribe

14:37.900 --> 14:39.900
do tell in the comments how did you like the video

14:39.900 --> 14:41.900
see you in the next video

14:41.900 --> 14:43.900
until then bye bye take care

